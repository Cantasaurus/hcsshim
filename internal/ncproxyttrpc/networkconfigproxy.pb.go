// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/Microsoft/hcsshim/internal/ncproxyttrpc/networkconfigproxy.proto

package ncproxyttrpc

import (
	context "context"
	fmt "fmt"
	github_com_containerd_ttrpc "github.com/containerd/ttrpc"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RegisterComputeAgentRequest struct {
	AgentAddress         string   `protobuf:"bytes,1,opt,name=agent_address,json=agentAddress,proto3" json:"agent_address,omitempty"`
	NamespaceID          string   `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterComputeAgentRequest) Reset()      { *m = RegisterComputeAgentRequest{} }
func (*RegisterComputeAgentRequest) ProtoMessage() {}
func (*RegisterComputeAgentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f9efc6dfbf9b45, []int{0}
}
func (m *RegisterComputeAgentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterComputeAgentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterComputeAgentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterComputeAgentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterComputeAgentRequest.Merge(m, src)
}
func (m *RegisterComputeAgentRequest) XXX_Size() int {
	return m.Size()
}
func (m *RegisterComputeAgentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterComputeAgentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterComputeAgentRequest proto.InternalMessageInfo

type RegisterComputeAgentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterComputeAgentResponse) Reset()      { *m = RegisterComputeAgentResponse{} }
func (*RegisterComputeAgentResponse) ProtoMessage() {}
func (*RegisterComputeAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f9efc6dfbf9b45, []int{1}
}
func (m *RegisterComputeAgentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterComputeAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterComputeAgentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterComputeAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterComputeAgentResponse.Merge(m, src)
}
func (m *RegisterComputeAgentResponse) XXX_Size() int {
	return m.Size()
}
func (m *RegisterComputeAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterComputeAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterComputeAgentResponse proto.InternalMessageInfo

type ConfigureNamespaceRequest struct {
	NamespaceID          string   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigureNamespaceRequest) Reset()      { *m = ConfigureNamespaceRequest{} }
func (*ConfigureNamespaceRequest) ProtoMessage() {}
func (*ConfigureNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f9efc6dfbf9b45, []int{2}
}
func (m *ConfigureNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfigureNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfigureNamespaceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfigureNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigureNamespaceRequest.Merge(m, src)
}
func (m *ConfigureNamespaceRequest) XXX_Size() int {
	return m.Size()
}
func (m *ConfigureNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigureNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigureNamespaceRequest proto.InternalMessageInfo

type ConfigureNamespaceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigureNamespaceResponse) Reset()      { *m = ConfigureNamespaceResponse{} }
func (*ConfigureNamespaceResponse) ProtoMessage() {}
func (*ConfigureNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f9efc6dfbf9b45, []int{3}
}
func (m *ConfigureNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfigureNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfigureNamespaceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfigureNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigureNamespaceResponse.Merge(m, src)
}
func (m *ConfigureNamespaceResponse) XXX_Size() int {
	return m.Size()
}
func (m *ConfigureNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigureNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigureNamespaceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterComputeAgentRequest)(nil), "RegisterComputeAgentRequest")
	proto.RegisterType((*RegisterComputeAgentResponse)(nil), "RegisterComputeAgentResponse")
	proto.RegisterType((*ConfigureNamespaceRequest)(nil), "ConfigureNamespaceRequest")
	proto.RegisterType((*ConfigureNamespaceResponse)(nil), "ConfigureNamespaceResponse")
}

func init() {
	proto.RegisterFile("github.com/Microsoft/hcsshim/internal/ncproxyttrpc/networkconfigproxy.proto", fileDescriptor_11f9efc6dfbf9b45)
}

var fileDescriptor_11f9efc6dfbf9b45 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0xcd, 0x7c, 0x8b, 0x0f, 0x9c, 0x56, 0x84, 0xa1, 0x8b, 0x9a, 0xd6, 0x51, 0xe2, 0xc6, 0x55,
	0x02, 0x75, 0xe9, 0xc6, 0xb6, 0x6e, 0x8a, 0xd8, 0x4a, 0x40, 0x90, 0x6e, 0x4a, 0x3a, 0xb9, 0x4d,
	0x07, 0xcd, 0x4c, 0x9c, 0x99, 0xf8, 0xb3, 0xf3, 0xc1, 0x7c, 0x80, 0x2e, 0x5d, 0xba, 0x12, 0x9b,
	0x27, 0x91, 0x24, 0xb4, 0x88, 0xb6, 0x45, 0xdc, 0xdd, 0x7b, 0x38, 0xdc, 0xf3, 0xc3, 0xc5, 0xe7,
	0x11, 0x37, 0xd3, 0x74, 0xec, 0x32, 0x19, 0x7b, 0x17, 0x9c, 0x29, 0xa9, 0xe5, 0xc4, 0x78, 0x53,
	0xa6, 0xf5, 0x94, 0xc7, 0x1e, 0x17, 0x06, 0x94, 0x08, 0x6e, 0x3d, 0xc1, 0x12, 0x25, 0x1f, 0x9f,
	0x8c, 0x51, 0x09, 0xf3, 0x04, 0x98, 0x07, 0xa9, 0x6e, 0x98, 0x14, 0x13, 0x1e, 0x15, 0xb8, 0x9b,
	0x28, 0x69, 0xa4, 0x5d, 0x8b, 0x64, 0x24, 0x8b, 0xd1, 0xcb, 0xa7, 0x12, 0x75, 0xee, 0x71, 0xc3,
	0x87, 0x88, 0x6b, 0x03, 0xaa, 0x2b, 0xe3, 0x24, 0x35, 0xd0, 0x8e, 0x40, 0x18, 0x1f, 0xee, 0x52,
	0xd0, 0x86, 0x1c, 0xe2, 0xed, 0x20, 0xdf, 0x47, 0x41, 0x18, 0x2a, 0xd0, 0xba, 0x8e, 0x0e, 0xd0,
	0xd1, 0x96, 0x5f, 0x2d, 0xc0, 0x76, 0x89, 0x91, 0x16, 0xae, 0x8a, 0x20, 0x06, 0x9d, 0x04, 0x0c,
	0x46, 0x3c, 0xac, 0xff, 0xcb, 0x39, 0x9d, 0x9d, 0xec, 0x7d, 0xbf, 0xd2, 0x5f, 0xe0, 0xbd, 0x33,
	0xbf, 0xb2, 0x24, 0xf5, 0x42, 0x87, 0xe2, 0xe6, 0x6a, 0x5d, 0x9d, 0x48, 0xa1, 0xc1, 0x19, 0xe0,
	0xdd, 0x6e, 0x11, 0x21, 0x55, 0xb0, 0x3c, 0xb2, 0x70, 0xf5, 0x5d, 0x10, 0xfd, 0x42, 0xb0, 0x89,
	0xed, 0x55, 0x07, 0x4b, 0xb9, 0xd6, 0x0b, 0xc2, 0xa4, 0x5f, 0x36, 0x57, 0xb2, 0x2e, 0xf3, 0xe6,
	0xc8, 0x15, 0xae, 0xad, 0x72, 0x49, 0x9a, 0xee, 0x86, 0xd2, 0xec, 0x3d, 0x77, 0x63, 0x34, 0x8b,
	0x0c, 0x30, 0xf9, 0xe9, 0x85, 0xd8, 0xee, 0xda, 0xc4, 0x76, 0xc3, 0x5d, 0x6f, 0xde, 0xb1, 0x3a,
	0xc3, 0xd9, 0x9c, 0x5a, 0x6f, 0x73, 0x6a, 0x3d, 0x67, 0x14, 0xcd, 0x32, 0x8a, 0x5e, 0x33, 0x8a,
	0x3e, 0x32, 0x8a, 0x86, 0xa7, 0x7f, 0x78, 0xa1, 0x93, 0xaf, 0xdb, 0xb5, 0x35, 0xfe, 0x5f, 0xbc,
	0xca, 0xf1, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x27, 0x0f, 0x2f, 0xd0, 0x8f, 0x02, 0x00, 0x00,
}

func (m *RegisterComputeAgentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterComputeAgentRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AgentAddress) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintNetworkconfigproxy(dAtA, i, uint64(len(m.AgentAddress)))
		i += copy(dAtA[i:], m.AgentAddress)
	}
	if len(m.NamespaceID) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintNetworkconfigproxy(dAtA, i, uint64(len(m.NamespaceID)))
		i += copy(dAtA[i:], m.NamespaceID)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegisterComputeAgentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterComputeAgentResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ConfigureNamespaceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfigureNamespaceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.NamespaceID) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintNetworkconfigproxy(dAtA, i, uint64(len(m.NamespaceID)))
		i += copy(dAtA[i:], m.NamespaceID)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ConfigureNamespaceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfigureNamespaceResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintNetworkconfigproxy(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *RegisterComputeAgentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AgentAddress)
	if l > 0 {
		n += 1 + l + sovNetworkconfigproxy(uint64(l))
	}
	l = len(m.NamespaceID)
	if l > 0 {
		n += 1 + l + sovNetworkconfigproxy(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterComputeAgentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConfigureNamespaceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NamespaceID)
	if l > 0 {
		n += 1 + l + sovNetworkconfigproxy(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ConfigureNamespaceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovNetworkconfigproxy(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozNetworkconfigproxy(x uint64) (n int) {
	return sovNetworkconfigproxy(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *RegisterComputeAgentRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RegisterComputeAgentRequest{`,
		`AgentAddress:` + fmt.Sprintf("%v", this.AgentAddress) + `,`,
		`NamespaceID:` + fmt.Sprintf("%v", this.NamespaceID) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RegisterComputeAgentResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RegisterComputeAgentResponse{`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConfigureNamespaceRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConfigureNamespaceRequest{`,
		`NamespaceID:` + fmt.Sprintf("%v", this.NamespaceID) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConfigureNamespaceResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConfigureNamespaceResponse{`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringNetworkconfigproxy(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}

type NetworkConfigProxyService interface {
	RegisterComputeAgent(ctx context.Context, req *RegisterComputeAgentRequest) (*RegisterComputeAgentResponse, error)
	ConfigureNamespace(ctx context.Context, req *ConfigureNamespaceRequest) (*ConfigureNamespaceResponse, error)
}

func RegisterNetworkConfigProxyService(srv *github_com_containerd_ttrpc.Server, svc NetworkConfigProxyService) {
	srv.Register("NetworkConfigProxy", map[string]github_com_containerd_ttrpc.Method{
		"RegisterComputeAgent": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
			var req RegisterComputeAgentRequest
			if err := unmarshal(&req); err != nil {
				return nil, err
			}
			return svc.RegisterComputeAgent(ctx, &req)
		},
		"ConfigureNamespace": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
			var req ConfigureNamespaceRequest
			if err := unmarshal(&req); err != nil {
				return nil, err
			}
			return svc.ConfigureNamespace(ctx, &req)
		},
	})
}

type networkConfigProxyClient struct {
	client *github_com_containerd_ttrpc.Client
}

func NewNetworkConfigProxyClient(client *github_com_containerd_ttrpc.Client) NetworkConfigProxyService {
	return &networkConfigProxyClient{
		client: client,
	}
}

func (c *networkConfigProxyClient) RegisterComputeAgent(ctx context.Context, req *RegisterComputeAgentRequest) (*RegisterComputeAgentResponse, error) {
	var resp RegisterComputeAgentResponse
	if err := c.client.Call(ctx, "NetworkConfigProxy", "RegisterComputeAgent", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *networkConfigProxyClient) ConfigureNamespace(ctx context.Context, req *ConfigureNamespaceRequest) (*ConfigureNamespaceResponse, error) {
	var resp ConfigureNamespaceResponse
	if err := c.client.Call(ctx, "NetworkConfigProxy", "ConfigureNamespace", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
func (m *RegisterComputeAgentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNetworkconfigproxy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterComputeAgentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterComputeAgentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkconfigproxy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamespaceID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkconfigproxy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NamespaceID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkconfigproxy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterComputeAgentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNetworkconfigproxy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterComputeAgentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterComputeAgentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkconfigproxy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfigureNamespaceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNetworkconfigproxy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfigureNamespaceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfigureNamespaceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamespaceID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkconfigproxy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NamespaceID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkconfigproxy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfigureNamespaceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNetworkconfigproxy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfigureNamespaceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfigureNamespaceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkconfigproxy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNetworkconfigproxy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNetworkconfigproxy(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNetworkconfigproxy
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNetworkconfigproxy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNetworkconfigproxy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNetworkconfigproxy
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthNetworkconfigproxy
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowNetworkconfigproxy
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipNetworkconfigproxy(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthNetworkconfigproxy
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthNetworkconfigproxy = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNetworkconfigproxy   = fmt.Errorf("proto: integer overflow")
)
